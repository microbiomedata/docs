###############################################################################
# Introduction:
# -------------
# This workflow builds the NMDC documentation, checks for broken links,
# and identifies any spelling errors in the documentation.
# If any issues are found (broken links or misspelled words), it creates
# GitHub Issues containing lists of the errors for further review and fixing.
#
###############################################################################

name: Check Links and Spelling in Documentation

# Make it so this workflow only runs when called by another workflow.
on:
  workflow_call: { }

jobs:
  check-links:
    name: Check Links in Documentation
    runs-on: ubuntu-latest
    permissions:
      issues: write # required for peter-evans/create-issue-from-file
    steps:
      - name: Get website file tree
        uses: actions/download-artifact@v4
        with:
          path: _build/html

      # Note: Most of this snippet was copied from https://github.com/microbiomedata/nmdc-schema/blob/9c663673f3110a31f3a54a26a0698211c42b6143/.github/workflows/check-links.yaml#L38C1-L58C45.
      #       A few parts were copied from https://github.com/lycheeverse/lychee-action.
      - name: Use Lychee to check for broken links
        # This step will populate `env.lychee_exit_code` with the exit code returned by lychee.
        # Possible exit codes: https://github.com/lycheeverse/lychee?tab=readme-ov-file#exit-codes
        # Reference: https://github.com/lycheeverse/lychee-action
        id: lychee
        uses: lycheeverse/lychee-action@v1.9.0
        with:
          # Reference: https://github.com/lycheeverse/lychee#commandline-parameters
          args: --base docs --verbose --no-progress --format markdown --timeout 5 '_build/html/**/*.html'
          debug: true
          output: ./lychee/out.md
          fail: false
      - name: Create GitHub Issue listing broken links
        # This step will only run if lychee returned a non-zero exit code.
        # Reference: https://docs.github.com/en/actions/learn-github-actions/variables#using-the-env-context-to-access-environment-variable-values
        if: steps.lychee.outputs.exit_code != 0
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: Website file tree contains broken links
          content-filepath: ./lychee/out.md

  check-spelling:
    name: Check Spelling in Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Check out commit
        uses: actions/checkout@v4
      - name: Download final build artifact
        uses: actions/download-artifact@v4
        with:
          path: _build/html
      - name: Run Spell Checker
        id: spellcheck
        continue-on-error: true
        # Source: https://github.com/tbroadley/spellchecker-cli and https://github.com/austenstone/spellchecker-cli-action-summary
        # Based off: https://github.com/austenstone/spellchecker-cli-action-summary/blob/main/.github/workflows/spellcheck.yml
        run: |
          mkdir -p spellcheck_reports
          npx -y spellchecker-cli \
            --files _build/html/**/*.html \
            --dictionaries .github/workflows/spellcheck_allow_list.txt \
            --plugins spell indefinite-article repeated-words syntax-mentions syntax-urls \
            --reports spellcheck_reports/spellcheck_report.json |
            tee spellcheck_reports/spellcheck_output.txt
          if grep -q 'misspelt' spellcheck_reports/spellcheck_report.json; then
            echo "misspelt=true" >> $GITHUB_OUTPUT
          else
            echo "misspelt=false" >> $GITHUB_OUTPUT
          fi

      # - name: Create GitHub Issue for Misspellings
      #   if: ${{ steps.spellcheck.outputs.misspelt == 'true' }}
      #   uses: peter-evans/create-issue-from-file@v4
      #   with:
      #     title: Documentation contains misspelled words
      #     content-filepath: spellcheck_reports/spellcheck_output.txt
      #     labels: documentation, spelling-error